package com.ydd.zhichat.fragment;import android.app.Activity;import android.content.Context;import android.content.Intent;import android.graphics.Bitmap;import android.net.Uri;import android.os.Bundle;import android.support.annotation.NonNull;import android.support.annotation.Nullable;import android.support.v4.app.Fragment;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.webkit.WebChromeClient;import android.webkit.WebSettings;import android.webkit.WebView;import android.webkit.WebViewClient;import com.xuan.xuanhttplibrary.okhttp.HttpUtils;import com.xuan.xuanhttplibrary.okhttp.callback.ListCallback;import com.xuan.xuanhttplibrary.okhttp.result.ArrayResult;import com.ydd.zhichat.R;import com.ydd.zhichat.bean.circle.FindItem;import com.ydd.zhichat.helper.DialogHelper;import com.ydd.zhichat.ui.MainActivity;import com.ydd.zhichat.ui.base.CoreManager;import com.ydd.zhichat.util.ToastUtil;import com.ydd.zhichat.view.SkinImageView;import com.ydd.zhichat.view.SkinTextView;import java.util.HashMap;import java.util.List;import okhttp3.Call;public class WebFragment extends Fragment {    WebView webView;    SkinImageView iv_title_left,iv_title_right1,iv_title_right2;    SkinTextView tv_title_center,tv_title_right;    protected CoreManager coreManager = null;    @Override    public void onCreate(@Nullable Bundle savedInstanceState) {        super.onCreate(savedInstanceState);    }    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        View view = inflater.inflate(R.layout.fragment_web, container, false);        Bundle bundle = getArguments();        //这里就拿到了之前传递的参数        webView = (WebView) view.findViewById(R.id.webview);        iv_title_left=view.findViewById(R.id.iv_title_left);        tv_title_center=view.findViewById(R.id.tv_title_center);/*        iv_title_right1=view.findViewById(R.id.iv_title_right1);        iv_title_right2=view.findViewById(R.id.iv_title_right2);        iv_title_right1.setVisibility(View.VISIBLE);        iv_title_right2.setVisibility(View.VISIBLE);        iv_title_right2.setImageResource(R.drawable.shuaxin);        iv_title_right1.setImageResource(R.drawable.hometop);*/        String urls ="https://www.baidu.com";        tv_title_center.setText("加载中，请稍后…");        initView( urls);        getMoreItem();        return view;    }    public void  initView(String urls) {        //获得控件        iv_title_left.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                webView.goBack();            }        });        /*iv_title_right1.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                webView.loadUrl(urls);            }        });        iv_title_right2.setOnClickListener(new View.OnClickListener() {            @Override            public void onClick(View v) {                webView.reload(); //刷新            }        });*/        //访问网页        WebSettings settings = webView.getSettings();        settings.setSavePassword(false);        settings.setJavaScriptEnabled(true);        // settings.setAllowFileAccessFromFileURLs(true);        //  settings.setAllowUniversalAccessFromFileURLs(true);        settings.setLoadWithOverviewMode(true);        settings.setSupportZoom(true);        settings.setUseWideViewPort(true);        settings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.SINGLE_COLUMN);        settings.setBuiltInZoomControls(true);        settings.setDisplayZoomControls(false);        /* 设置为true表示支持使用js打开新的窗口 */        settings.setJavaScriptCanOpenWindowsAutomatically(true);        /* 设置缓存模式 */        settings.setCacheMode(WebSettings.LOAD_DEFAULT);        settings.setDomStorageEnabled(true);        /* 设置为使用webview推荐的窗口 */        settings.setUseWideViewPort(true);        /* 设置为使用屏幕自适配 */        settings.setLoadWithOverviewMode(true);        /* 设置是否允许webview使用缩放的功能,我这里设为false,不允许 */        settings.setBuiltInZoomControls(false);        /* 提高网页渲染的优先级 */        settings.setRenderPriority(WebSettings.RenderPriority.HIGH);        /* HTML5的地理位置服务,设置为true,启用地理定位 */        settings.setGeolocationEnabled(true);        /* 设置可以访问文件 */        settings.setAllowFileAccess(true);        //系统默认会通过手机浏览器打开网页，为了能够直接通过WebView显示网页，则必须设置        //设置WebViewClient        webView.setWebViewClient(new WebViewClient() {            @Override            public boolean shouldOverrideUrlLoading(WebView view, String url) {                try {                    if (url.startsWith("http:") || url.startsWith("https:")) {                        view.loadUrl(url);                    } else {                        Intent intent = new Intent(Intent.ACTION_VIEW, Uri.parse(url));                        startActivity(intent);                    }                    return true;                } catch (Exception e){                    return true;                }            }            //加载前            @Override            public void onPageStarted(WebView view, String url, Bitmap favicon) {            }            //加载完成            @Override            public void onPageFinished(WebView view, String url) {            }        });        //设置WebChromeClient类        webView.setWebChromeClient(new WebChromeClient() {            //获取网站标题            @Override            public void onReceivedTitle(WebView view, String title) {                tv_title_center.setText("主页");            }            //进度显示            @Override            public void onProgressChanged(WebView view, int newProgress) {            }        });    }    private void getMoreItem() {        Activity activity = getActivity();        if(activity instanceof MainActivity){            coreManager = ((MainActivity)activity).coreManager;        }        HashMap<String, String> params = new HashMap<String, String>();        params.put("access_token", coreManager.getSelfStatus().accessToken);        params.put("page", 1+"");        params.put("limit", 15+"");        HttpUtils.get().url(coreManager.getConfig().FIND_MORE_ITEMS)                .params(params)                .build()                .execute(new ListCallback<FindItem>(FindItem.class) {                    @Override                    public void onResponse(ArrayResult<FindItem> result) {                        String url = "https://www.baidu.com";                        if(result!=null){                            List<FindItem> findItems = result.getData();                            if(findItems!=null && findItems.size()>0){                                url = findItems.get(0).getUrl();                            }                        }                        if(url!=null && (url.startsWith("http://") || url.startsWith("https://"))) {                            webView.loadUrl(url);                        }                    }                    @Override                    public void onError(Call call, Exception e) {                        DialogHelper.dismissProgressDialog();                        ToastUtil.showErrorNet(getContext());                    }                });    }}